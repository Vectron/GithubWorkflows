name: Deploy package to Nuget and Github
on:
  workflow_call:
    inputs:
      os:
        required: false
        type: string
        default: ubuntu-latest
        description: 'The os to run the runner on'
      dotnet_version:
        required: true
        type: string
        description: 'The dotnet version to use'
      solution_file:
        required: true
        type: string
        description: 'The full name of the solution or project file'
      solution_directory:
        required: false
        type: string
        description: 'The project or solution directory'
      run_condition:
        required: false
        type: boolean
        description: 'The condition for running this task'
        default: ${{github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')}}
    secrets:
      NUGET_KEY:
        required: false
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  NBGV_PublicRelease: false
  Input: ${{ inputs.solution_directory }}
  PackageDirectory: ./bin/Pack/
  Target: ${{ inputs.solution_directory }}${{ inputs.solution_file }}
jobs:
  deploy:
    if: ${{ inputs.run_condition }}
    runs-on: ${{ inputs.os }}
    permissions:
      packages: write
    env:
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
    steps:
    - name: Sanitize windows paths
      if: runner.os == 'Windows'
      run: |
         chcp 65001 #set code page to utf-8
         $out = $env:PackageDirectory.Replace('/', '\')
         echo ("PackageDirectory=" + $out) >> $env:GITHUB_ENV
         $in = $env:Input.Replace('/', '\')
         echo ("Input=" + $in) >> $env:GITHUB_ENV
         $target = $env:Target.Replace('/', '\')
         echo ("Target=" + $target) >> $env:GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}
    - name: Setup github remotes
      run: >
        dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        --username ${{ github.repository_owner }}
        --password ${{ secrets.GITHUB_TOKEN }}
        --store-password-in-clear-text
        --name github
    - name: Nerdbank.GitVersioning
      uses: dotnet/nbgv@master
      with:
        setAllVars: true
        path: ${{ env.Input }}
    - name: Install dependencies
      run: >
        dotnet restore ${{ env.Target }}
        /p:EnableWindowsTargeting=true
    - name: Pack
      run: >
        dotnet pack ${{ env.Target }}
        --configuration Release
        --verbosity normal
        --nologo
        --no-restore
        /p:EnableWindowsTargeting=true
        --output ${{ env.PackageDirectory }}
    - name: Push to GitHub Feed
      run: >
        dotnet nuget push ${{ env.PackageDirectory }}*.nupkg
        --source "github"
        --skip-duplicate
        --api-key ${{ secrets.GITHUB_TOKEN }}
    - name: Validate nuget key
      if: env.NUGET_KEY == ''
      run: echo "::warning::'NUGET_KEY' has not been set, go to 'settings \> secrets \> actions' to create it"
    - name: Push to NuGet Feed
      if: env.NBGV_PublicRelease == 'true' && env.NUGET_KEY != ''
      run: >
        dotnet nuget push ${{ env.PackageDirectory }}*.nupkg
        --source https://api.nuget.org/v3/index.json
        --skip-duplicate
        --api-key ${{ secrets.NUGET_KEY }}
